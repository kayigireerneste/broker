{
  "openapi": "3.0.0",
  "info": {
    "title": "Broker API",
    "version": "1.0.0",
    "description": "This is the APIs documentation for Broker Platform"
  },
  "servers": [
    { "url": "http://localhost:3000", "description": "Development server" },
    { "url": "https://broker.example.com", "description": "Production server" }
  ],
  "tags": [
    { "name": "Authentication", "description": "APIs for managing Authentication" },
    { "name": "User", "description": "User CRUD operations" }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Sign Up",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent to email for verification"
          },
          "400": {
            "description": "Missing or invalid fields"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/verify-otp": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify OTP for user email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully"
          },
          "400": {
            "description": "Invalid OTP or email"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Login",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token"
          },
          "400": {
            "description": "Invalid credentials or OTP expired"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/resend-otp": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Resend OTP to user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP resent to email"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of users" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignupRequest" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Invalid data" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "User found" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignupRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "400": { "description": "Invalid data" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "User deleted" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string", "maxLength": 15 },
          "lastName": { "type": "string", "maxLength": 15 },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": "string", "pattern": "^\\d{1,15}$" },
          "password": { "type": "string", "minLength": 8 },
          "idNumber": { "type": "string", "pattern": "^\\d{1,16}$" },
          "dateOfBirth": { "type": "string", "format": "date" },
          "address": { "type": "string", "minLength": 3 },
          "occupation": { "type": "string" },
          "investmentExperience": { "type": "string" }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "password",
          "idNumber",
          "dateOfBirth",
          "address",
          "occupation",
          "investmentExperience"
        ]
      },
      "VerifyOtpRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "otp": { "type": "string", "pattern": "^\\d{6}$" }
        },
        "required": ["email", "otp"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 8 }
        },
        "required": ["email", "password"]
      },
      "ResendOtpRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" }
        },
        "required": ["email"]
      }
    }
  }
}
